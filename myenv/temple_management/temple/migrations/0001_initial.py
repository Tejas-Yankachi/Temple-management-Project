# Generated by Django 5.2 on 2025-05-12 07:49

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Darshan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('max_capacity', models.PositiveIntegerField(default=100)),
                ('is_active', models.BooleanField(default=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='darshan_images/')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('description', models.TextField()),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('event_type', models.CharField(blank=True, max_length=100, null=True)),
                ('special_guest_info', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='event_images/')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Festival',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField(default='23:59')),
                ('image', models.ImageField(blank=True, null=True, upload_to='festivals/')),
                ('expected_attendance', models.IntegerField(default=100)),
                ('status', models.CharField(choices=[('upcoming', 'Upcoming'), ('ongoing', 'Ongoing'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='upcoming', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Pooja',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('duration', models.PositiveIntegerField(help_text='Duration in minutes')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('benefits', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='pooja_images/')),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_number', models.CharField(max_length=20)),
                ('status', models.CharField(choices=[('available', 'Available'), ('booked', 'Booked'), ('maintenance', 'Maintenance'), ('unavailable', 'Unavailable')], default='available', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('floor', models.PositiveIntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='RoomType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('bed_count', models.PositiveIntegerField(default=1)),
                ('description', models.TextField(blank=True)),
                ('price_per_night', models.DecimalField(decimal_places=2, max_digits=10)),
                ('amenities', models.TextField(blank=True, null=True)),
                ('capacity', models.PositiveIntegerField(default=2)),
                ('image', models.ImageField(blank=True, null=True, upload_to='room_type_images/')),
            ],
        ),
        migrations.CreateModel(
            name='Seva',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('duration', models.IntegerField(help_text='Duration in minutes')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
                ('max_devotees_per_day', models.PositiveIntegerField(default=10)),
                ('image', models.ImageField(blank=True, null=True, upload_to='seva_images/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Temple',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('location', models.CharField(max_length=300)),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='temple_images/')),
                ('established_date', models.DateField(blank=True, null=True)),
                ('contact_number', models.CharField(blank=True, max_length=15, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DarshanBooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_date', models.DateField()),
                ('preferred_time_slot', models.CharField(choices=[('morning', 'Morning (6 AM - 9 AM)'), ('midday', 'Midday (12 PM - 2 PM)'), ('evening', 'Evening (5 PM - 8 PM)')], max_length=20)),
                ('number_of_people', models.PositiveIntegerField(default=1)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled'), ('completed', 'Completed')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('payment_status', models.BooleanField(default=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('transaction_id', models.CharField(blank=True, max_length=100, null=True)),
                ('special_requests', models.TextField(blank=True, null=True)),
                ('darshan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='temple.darshan')),
                ('devotee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='darshan_bookings', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EventRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rsvp', models.BooleanField(default=False)),
                ('registered_at', models.DateTimeField(auto_now_add=True)),
                ('additional_guests', models.PositiveIntegerField(default=0)),
                ('special_requirements', models.TextField(blank=True, null=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registrations', to='temple.event')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FestivalBooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
                ('festival', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='temple.festival')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='festival_bookings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-booking_date'],
            },
        ),
        migrations.CreateModel(
            name='PoojaBooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_date', models.DateField()),
                ('booking_time', models.TimeField()),
                ('number_of_people', models.PositiveIntegerField(default=1)),
                ('special_requests', models.TextField(blank=True, null=True)),
                ('payment_status', models.BooleanField(default=False)),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=10)),
                ('transaction_id', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('devotee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pooja_bookings', to=settings.AUTH_USER_MODEL)),
                ('pooja', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='temple.pooja')),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_in', models.DateField()),
                ('check_out', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('adults', models.PositiveIntegerField(default=1)),
                ('children', models.PositiveIntegerField(default=0)),
                ('special_requests', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('booked', 'Booked'), ('checked_in', 'Checked In'), ('checked_out', 'Checked Out'), ('cancelled', 'Cancelled')], default='booked', max_length=20)),
                ('payment_status', models.BooleanField(default=False)),
                ('amount_paid', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to=settings.AUTH_USER_MODEL)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='temple.room')),
            ],
        ),
        migrations.AddField(
            model_name='room',
            name='room_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='temple.roomtype'),
        ),
        migrations.CreateModel(
            name='SevaBooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_date', models.DateField()),
                ('booking_time', models.TimeField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_status', models.BooleanField(default=False)),
                ('transaction_id', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('special_requests', models.TextField(blank=True, null=True)),
                ('devotee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seva_bookings', to=settings.AUTH_USER_MODEL)),
                ('seva', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='temple.seva')),
            ],
        ),
        migrations.AddField(
            model_name='seva',
            name='temple',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sevas', to='temple.temple'),
        ),
        migrations.AddField(
            model_name='roomtype',
            name='temple',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='room_types', to='temple.temple'),
        ),
        migrations.AddField(
            model_name='room',
            name='temple',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to='temple.temple'),
        ),
        migrations.AddField(
            model_name='pooja',
            name='temple',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='poojas', to='temple.temple'),
        ),
        migrations.CreateModel(
            name='InventoryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('barcode', models.CharField(blank=True, max_length=100, null=True)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('minimum_stock', models.PositiveIntegerField(default=5)),
                ('temple', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory', to='temple.temple')),
            ],
        ),
        migrations.AddField(
            model_name='festival',
            name='temple',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='festivals', to='temple.temple'),
        ),
        migrations.AddField(
            model_name='event',
            name='temple',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='temple.temple'),
        ),
        migrations.CreateModel(
            name='Donation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('donor_name', models.CharField(max_length=100)),
                ('donation_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date_of_donation', models.DateField()),
                ('purpose', models.CharField(blank=True, max_length=200, null=True)),
                ('payment_method', models.CharField(blank=True, max_length=50, null=True)),
                ('transaction_id', models.CharField(blank=True, max_length=100, null=True)),
                ('receipt_issued', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True, null=True)),
                ('donor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='donations', to=settings.AUTH_USER_MODEL)),
                ('temple', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='donations', to='temple.temple')),
            ],
        ),
        migrations.AddField(
            model_name='darshan',
            name='temple',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='darshans', to='temple.temple'),
        ),
        migrations.AlterUniqueTogether(
            name='roomtype',
            unique_together={('temple', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='room',
            unique_together={('temple', 'room_number')},
        ),
    ]
